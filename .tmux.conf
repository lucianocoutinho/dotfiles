# Screen like Ctrl-a for prefix
unbind C-b
set -g prefix ^A
bind a send-prefix

# last active window
bind-key C-a last-window

# vi mode
set-window-option -g mode-keys vi

# using vi style to cut and paste
unbind p
bind p paste-buffer
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  "bind-key Escape copy-mode; \
  bind-key -t vi-copy Escape cancel; \
  bind-key p paste-buffer; \
  bind-key -t vi-copy 'v' begin-selection; \
  bind-key -t vi-copy 'V' select-line; \
  bind-key -t vi-copy 'r' rectangle-toggle; \
  bind-key -t vi-copy 'y' copy-selection"
  #bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi 'v' send -X begin-selection; \
  bind-key -T copy-mode-vi 'V' send -X select-line; \
  bind-key -T copy-mode-vi 'r' send -X rectangle-toggle; \
  bind-key -T copy-mode-vi 'y' send -X copy-selection"
  #bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded!"

# open ssh to somewhere.
bind S command-prompt -p "SSH Target: " "new-window -n %1 'exec ssh %1'"

# open a man page in new window
bind / command-prompt "split-window -h 'exec man %%'"

# Pipe any output in the active pane into a file
bind-key C-p pipe-pane -o 'cat >>~/tmuxoutput.#I-#P'

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Show or hide the status line.
set -g status on

# Update the status bar every interval seconds.  By default, updates
# will occur every 15 seconds.  A setting of zero disables redrawing at
# interval.
set -g status-interval 1

# status bar settings
set -g status-bg black
set -g status-fg brightwhite
set -g status-left "[#h - load avg:#(uptime | awk '{gsub(\",\", \"\");print $(NF-2)\" \"$(NF-1)\" \"$(NF)}')] [#P]"

set -g status-left-length 43
set -g status-right '@%H:%M:%S - %d %b %Y (%a)'
set -g status-right-length 32

# NOTES: to sync all panes use
# setw synchronize-panes on|off
